/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { PhotoListRelationFilter } from "../../photo/base/PhotoListRelationFilter";
import { VideoListRelationFilter } from "../../video/base/VideoListRelationFilter";
import { AudioListRelationFilter } from "../../audio/base/AudioListRelationFilter";
import { PdfListRelationFilter } from "../../pdf/base/PdfListRelationFilter";
import { StatisticsListRelationFilter } from "../../statistics/base/StatisticsListRelationFilter";

@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => PhotoListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PhotoListRelationFilter)
  @IsOptional()
  @Field(() => PhotoListRelationFilter, {
    nullable: true,
  })
  photos?: PhotoListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => VideoListRelationFilter,
  })
  @ValidateNested()
  @Type(() => VideoListRelationFilter)
  @IsOptional()
  @Field(() => VideoListRelationFilter, {
    nullable: true,
  })
  videos?: VideoListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => AudioListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AudioListRelationFilter)
  @IsOptional()
  @Field(() => AudioListRelationFilter, {
    nullable: true,
  })
  audioItems?: AudioListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PdfListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PdfListRelationFilter)
  @IsOptional()
  @Field(() => PdfListRelationFilter, {
    nullable: true,
  })
  pdfs?: PdfListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => StatisticsListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StatisticsListRelationFilter)
  @IsOptional()
  @Field(() => StatisticsListRelationFilter, {
    nullable: true,
  })
  statisticsItems?: StatisticsListRelationFilter;
}

export { UserWhereInput as UserWhereInput };
