/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsDate,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { Photo } from "../../photo/base/Photo";
import { Video } from "../../video/base/Video";
import { Audio } from "../../audio/base/Audio";
import { Pdf } from "../../pdf/base/Pdf";
import { Statistics } from "../../statistics/base/Statistics";

@ObjectType()
class User {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  roles!: JsonValue;

  @ApiProperty({
    required: false,
    type: () => [Photo],
  })
  @ValidateNested()
  @Type(() => Photo)
  @IsOptional()
  photos?: Array<Photo>;

  @ApiProperty({
    required: false,
    type: () => [Video],
  })
  @ValidateNested()
  @Type(() => Video)
  @IsOptional()
  videos?: Array<Video>;

  @ApiProperty({
    required: false,
    type: () => [Audio],
  })
  @ValidateNested()
  @Type(() => Audio)
  @IsOptional()
  audioItems?: Array<Audio>;

  @ApiProperty({
    required: false,
    type: () => [Pdf],
  })
  @ValidateNested()
  @Type(() => Pdf)
  @IsOptional()
  pdfs?: Array<Pdf>;

  @ApiProperty({
    required: false,
    type: () => [Statistics],
  })
  @ValidateNested()
  @Type(() => Statistics)
  @IsOptional()
  statisticsItems?: Array<Statistics>;
}

export { User as User };
